{"version":3,"file":"static/js/84.fc566ad2.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","webpack://kamas/./src/tester/components/Profile/MyPosts/MyPosts.module.css?d071","webpack://kamas/./src/tester/components/Profile/MyPosts/Post/Post.module.css?f9ad","tester/components/Profile/MyPosts/Post/Post.jsx","tester/components/Profile/MyPosts/MyPosts.jsx","tester/components/Profile/MyPosts/MyPostsContainer.jsx","webpack://kamas/./src/tester/components/Profile/MyPosts/ProfileShow/ProfileShow.module.css?50c3","tester/components/Profile/MyPosts/ProfileShow/ProfileShow.jsx","webpack://kamas/./src/tester/components/Profile/ProfilePicture/ProfilePicture.module.css?a479","tester/components/Profile/ProfilePicture/ProfilePicture.jsx","tester/components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","tester/components/Profile/Profile.jsx","tester/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import { connect } from \"react-redux\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsDirection = (state) => {\r\n    return ({\r\n      isAuth: state.auth.isAuth,\r\n    });\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let ComponentContainer = (props) => {\r\n\r\n\r\n        if (!props.isAuth) {\r\n            return (<Navigate to={`/login`} />);\r\n        }\r\n        return <Component {...props} />\r\n\r\n\r\n    }\r\n  \r\n     let ConnectedAuthRedirectComponent = connect(mapStateToPropsDirection)(ComponentContainer);\r\n    return (ConnectedAuthRedirectComponent);\r\n} \r\n\r\n\r\n\r\nexport const withRouter=function (Children) {\r\n    return (props) => {\r\n  \r\n      const match = { params: useParams() }; \r\n      return <Children {...props} match={match} />\r\n    }\r\n  } /* - добавить это перед классовой компонентой  */","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__NQnd5\",\"content__body\":\"MyPosts_content__body__TlG28\",\"textareaBlock\":\"MyPosts_textareaBlock__9gRei\",\"content__textarea\":\"MyPosts_content__textarea__oaaX8\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__FLNTe\",\"post__body\":\"Post_post__body__BcHco\",\"post__items\":\"Post_post__items__lld9V\",\"post__item\":\"Post_post__item__PEXr6\",\"post__item_avatar\":\"Post_post__item_avatar__5pVaV\",\"post__item_text\":\"Post_post__item_text__8axnd\",\"post__image\":\"Post_post__image__iM4Wj\",\"post__title\":\"Post_post__title__OeAQb\",\"post__text\":\"Post_post__text__Oaj5X\",\"post__like\":\"Post_post__like__6V3NJ\",\"fonts\":\"Post_fonts__9tMrV\",\"font\":\"Post_font__7xRrV\",\"like\":\"Post_like__6-JVF\",\"dislike\":\"Post_dislike__18mFX\"};","import stylePost from \"./Post.module.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\n \r\n\r\n\r\nconst Post = function (props) {\r\n  return (\r\n    <div className={stylePost.post}>\r\n\r\n      <div className={stylePost.post__body}>\r\n        <div className={stylePost.post__items}>\r\n          <div className={`${stylePost.post__item} ${stylePost.post__item_avatar}`}>\r\n            <div className={stylePost.post__image}>\r\n              <img src=\"https://mykaleidoscope.ru/x/uploads/posts/2022-09/1663622642_59-mykaleidoscope-ru-p-uspeshnii-okhotnik-na-ribalke-instagram-66.jpg\" alt=\"123\" />\r\n            </div>\r\n          </div>\r\n          <div className={`${stylePost.post__item} ${stylePost.post__item_text}`}>\r\n            <div className={stylePost.post__title}>{props.name}</div>\r\n            <div className={stylePost.post__text}>\r\n              <p>{props.message}\r\n              </p>\r\n              <div className={stylePost.post__like}>\r\n                {props.like} лайков\r\n                <div className={stylePost.fonts}>\r\n\r\n                  <span className={`${stylePost.like} ${stylePost.font}`}>\r\n                    <FontAwesomeIcon icon={faThumbsUp} />\r\n                    </span>\r\n                  <span className={`${stylePost.dislike} ${stylePost.font}`}>\r\n                    <FontAwesomeIcon icon={faThumbsDown} />\r\n                    </span>\r\n                   \r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport styleMyPosts from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { TextArea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* let link = React.createRef(); */\r\n\r\n\r\n\r\nconst MyPosts = function (props) {\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    props.addPost(data.posts);\r\n  }\r\n\r\n\r\n  /* \r\n    let onAddPost = function () {\r\n  \r\n      props.addPost();\r\n      \r\n    }\r\n  \r\n    let onAddLetter = function (e) {\r\n  \r\n  \r\n      let text = e.target.value;\r\n      props.addLetter(text);\r\n    } */\r\n\r\n  let newMyPosts = props.myPosts.postArr.map(function (item, index, array) {\r\n\r\n    return (\r\n      <Post key={item.id} message={item.message} like={item.likes} name={item.name} />\r\n\r\n    )\r\n  });\r\n\r\n\r\n  return (\r\n    <div className={styleMyPosts.content}>\r\n      <h2>My posts1</h2>\r\n      \r\n\r\n      <div className={styleMyPosts.content__body}>\r\n\r\n        {/*  <MyPostForm onAddLetter={onAddLetter} onAddPost={onAddPost} textareaValue={props.myPosts.textareaValue} /> */}\r\n        <MyPostReduxForm onSubmit={onSubmit} /*onAddLetter={onAddLetter} onAddPost={onAddPost} textareaValue={props.myPosts.textareaValue} */ />\r\n        <div className={styleMyPosts.content__posts}>\r\n\r\n          {newMyPosts}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={styleMyPosts.textareaBlock}>\r\n      <Field  name={'posts'} component={TextArea} validate={[required, maxLength10,]}  className={styleMyPosts.content__textarea} placeholder=\"your news...\" />\r\n      </div>\r\n      <div className=\"content__BlockButton\">\r\n        <button type=\"submit\" /* onClick={props.onAddPost} */ className=\"content__button\">Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nconst MyPostReduxForm = reduxForm({ form: 'MyPost', })(MyPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import { /* addLetterActiveCreator, */ addMessageUserActionCreator } from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = function (state) {\r\n  return ({\r\n    myPosts: state.profile.myPosts,\r\n  });\r\n}\r\nconst mapDispatchToProps = function (dispatch) {\r\n  return ({\r\n    addPost: function (textNewMessage) {\r\n      dispatch(addMessageUserActionCreator(textNewMessage));\r\n    },\r\n\r\n   /*  addLetter: function (text) {\r\n      dispatch(addLetterActiveCreator(text));\r\n    }, */\r\n  });\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(MyPosts);","// extracted by mini-css-extract-plugin\nexport default {\"profile_show\":\"ProfileShow_profile_show__PALjN\",\"profile_show__body\":\"ProfileShow_profile_show__body__b1s9l\",\"profile_show__items\":\"ProfileShow_profile_show__items__-Giz6\",\"profile_show__picture\":\"ProfileShow_profile_show__picture__ImaDA\",\"profile_show__image\":\"ProfileShow_profile_show__image__oOipV\",\"user_data\":\"ProfileShow_user_data__cQ6CZ\",\"user_name\":\"ProfileShow_user_name__yhUMu\",\"user_find_job\":\"ProfileShow_user_find_job__1-uqJ\",\"user_contacts\":\"ProfileShow_user_contacts__-TKuR\",\"user_facebook\":\"ProfileShow_user_facebook__ZsV9F\",\"user_website\":\"ProfileShow_user_website__xblXa\",\"user_VK\":\"ProfileShow_user_VK__15VGL\",\"twitter\":\"ProfileShow_twitter__BfUqs\",\"instagram\":\"ProfileShow_instagram__wnnfM\",\"youtube\":\"ProfileShow_youtube__1mFEj\",\"github\":\"ProfileShow_github__TML2d\"};","import Spiner from \"../../../Generalis/Spiner/Spiner\";\r\nimport styleProfileShow from \"./ProfileShow.module.css\";\r\nimport defaultPictureUser from \"../../../../../inspect/image/1682520890_papik-pro-p-smaili-skobkami-i-tochkami-png-27.jpg\";\r\n\r\n\r\nconst ProfileShow = function ({isAuth,profileUser}) {\r\n    const data = () => {\r\n        let contactsList = [];\r\n/*         let contacts = profileUser.contacts;\r\n */        for (const key in profileUser.contacts) {\r\n            contactsList.push(<div className={styleProfileShow.social}>{key}:   {isAuth ? (profileUser.contacts[key] ? <a href={`//${profileUser.contacts[key]}`}>{profileUser.contacts[key]}</a> : dontHave) : dontHave}      </div>);\r\n        }\r\n        return contactsList;\r\n    }\r\n\r\n    if (!Object.keys(profileUser).length) {\r\n        return (<Spiner />);\r\n    }\r\n    let dontHave = ' отсутствует';\r\n    let job = profileUser.lookingForAJob;\r\n    /* let isAuth = props.isAuth; */\r\n    return (<div className={styleProfileShow.profile_show}>\r\n        <div className={styleProfileShow.profile_show__body}>\r\n            <div className={styleProfileShow.profile_show__items}>\r\n                <div className={styleProfileShow.profile_show__picture}>\r\n                    <div className={styleProfileShow.profile_show__image}>\r\n                        {isAuth ? (profileUser.photos.large ? <img src={profileUser.photos.large} alt=\"large\" /> : \r\n                        <img src={defaultPictureUser} alt=\"large\" />) : <img src={defaultPictureUser} alt=\"large\" />}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={styleProfileShow.user_data}>\r\n                    <div className={styleProfileShow.user_name}>Имя: {isAuth ? profileUser.fullName : 'incognito'}</div>\r\n                    <div className={styleProfileShow.user_find_job}>Ищущий работу?:{isAuth ? (job ? ` ${profileUser.lookingForAJobDescription}` : dontHave) : dontHave}</div>\r\n                    <div className={styleProfileShow.user_contacts}>\r\n                        {/*  <div className={styleProfileShow.user_facebook}>facebook: {props.profileUser.contacts.facebook ? <a href={props.profileUser.contacts.facebook}>{props.profileUser.contacts.facebook}</a> : dontHave} </div>\r\n                        <div className={styleProfileShow.user_website}>website:{props.profileUser.contacts.website ? <a href={props.profileUser.contacts.website}>{props.profileUser.contacts.website}</a> : dontHave} </div>\r\n                        <div className={styleProfileShow.user_VK}>VK: {props.profileUser.contacts.vk ? <a href={props.profileUser.contacts.vk}>{props.profileUser.contacts.vk}</a> : dontHave} </div>\r\n                        <div className={styleProfileShow.twitter}>twitter: {props.profileUser.contacts.twitter ? <a href={props.profileUser.contacts.twitter}>{props.profileUser.contacts.twitter}</a> : dontHave}</div>\r\n                        <div className={styleProfileShow.instagram}>instagram: {props.profileUser.contacts.instagram ? <a href={props.profileUser.contacts.instagram}>{props.profileUser.contacts.instagram}</a> : dontHave}</div>\r\n                        <div className={styleProfileShow.youtube}>youtube: {props.profileUser.contacts.youtube ? <a href={props.profileUser.contacts.youtube}>{props.profileUser.contacts.youtube}</a> : dontHave}</div>\r\n                        <div className={styleProfileShow.github}>github: {props.profileUser.contacts.github ? <a href={props.profileUser.contacts.github}>{props.profileUser.contacts.github}</a> : dontHave} </div> */}\r\n                        {data()}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>);\r\n}\r\nexport default ProfileShow;","// extracted by mini-css-extract-plugin\nexport default {\"content__image\":\"ProfilePicture_content__image__YvbHF\"};","import panaram from \"../../../../inspect/image/panaram.jpg\";\r\nimport styleProfilePicture from './ProfilePicture.module.css';\r\n\r\n\r\nconst ProfilePicture = function () {\r\n    \r\n   \r\n   \r\n        \r\n        return (<div className={styleProfilePicture.content__image}>\r\n\r\n            <img src={panaram} />\r\n        </div>);\r\n   \r\n\r\n\r\n}\r\n\r\nexport default ProfilePicture;","import React, { useState } from \"react\";\r\n/* import { createStoreHook } from \"react-redux\";\r\n */\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    /* let stateWithSetState = useState(false);\r\n    let editMode = stateWithSetState[0];\r\n    let setEditMode = stateWithSetState[1]; */\r\n\r\n    let [inputContent, setInputContent] = useState(props.status);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    const activateEditMode = (e) => {\r\n\r\n        setInputContent(props.status);\r\n        setEditMode(true);\r\n\r\n\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setInputContent(e.target.value);\r\n\r\n    }\r\n    const closeEditMode = (e) => {\r\n        setEditMode(false);\r\n\r\n        props.updateProfileStatus(e.target.value);\r\n\r\n    }\r\n\r\n\r\n\r\n    let active = (props.status && !(props.status.startsWith(' ')));\r\n    let caseActive = active ? <span onBlur={closeEditMode} onDoubleClick={activateEditMode}>{props.status}</span> : <span onDoubleClick={activateEditMode}>Статуса нет</span>;\r\n    return (\r\n        <div>{props.isAuth ? editMode\r\n            ? <div><input onInput={onStatusChange} autoFocus onBlur={closeEditMode} value={inputContent} type=\"text\"></input></div>\r\n            : <div>\r\n                {caseActive}\r\n            </div> : caseActive}\r\n            {/*  {this.state.editMode\r\n                    ? <div><input onInput={this.onStatusChange} autoFocus onBlur={this.closeEditMode} value={this.state.status} type=\"text\"></input></div>\r\n                    : <div>\r\n                        {this.props.status ? <span onDoubleClick={this.activateEditMode}>{this.props.status}</span> : <span onDoubleClick={this.activateEditMode}>Статуса нет</span>}\r\n                    </div>} */}\r\n\r\n\r\n        </div >\r\n    );\r\n\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileShow from \"./MyPosts/ProfileShow/ProfileShow\";\r\nimport ProfilePicture from \"./ProfilePicture/ProfilePicture\";\r\n\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\n\r\n\r\n\r\nconst Profile = function (props) {\r\n  \r\n  return (\r\n    <div >\r\n      \r\n      <ProfilePicture  />\r\n      <ProfileStatusWithHooks isAuth={props.isAuth} userId={ props.match.params.userId}  updateProfileStatus={props.updateProfileStatus}  getProfileStatus={props.getProfileStatus} profileStatus={props.profileStatus} status={props.userStatus} /> {/* props.status */}\r\n      <ProfileShow isAuth={props.isAuth} profileUser={props.profileUser} />\r\n      <MyPostsContainer />\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default Profile;","import { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport { getMyProfile, getProfileStatus, getUserProfile, updateProfileStatus } from \"../../../redux/profile-reducer\";\r\nimport { withRouter } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      this.props.getMyProfile();//////////\r\n    }\r\n\r\n\r\n    /*  else if (!(this.props.profileUser.id)) {\r\n     this.props.getUserProfile(2);\r\n \r\n     }\r\n     else{\r\n       this.props.getUserProfile(this.props.profileUser.id);\r\n     } */\r\n\r\n    userId && this.props.getUserProfile(userId);\r\n\r\n\r\n    userId && this.props.getProfileStatus(userId);\r\n\r\n  }\r\n  \r\n  render() {\r\n    \r\n    \r\n    return <>\r\n\r\n      < Profile  {...this.props} />\r\n    </>\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = function (state) {\r\n  return ({\r\n    profileUser: state.profile.profileUser,\r\n    myPosts: state.profile.myPosts,\r\n    userStatus: state.profile.userStatus,\r\n    isAuth: state.auth.isAuth,\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { getProfileStatus, updateProfileStatus, getUserProfile, getMyProfile, }),\r\n  withRouter,\r\n/* withAuthRedirect */)(ProfileContainer);"],"names":["mapStateToPropsDirection","state","isAuth","auth","withAuthRedirect","Component","connect","props","_jsx","_objectSpread","Navigate","to","withRouter","Children","match","params","useParams","className","stylePost","children","_jsxs","concat","src","alt","name","message","like","FontAwesomeIcon","icon","faThumbsUp","faThumbsDown","maxLength10","maxLengthCreator","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","styleMyPosts","textareaBlock","Field","component","TextArea","validate","required","content__textarea","placeholder","type","newMyPosts","myPosts","postArr","map","item","index","array","Post","likes","id","content","content__body","data","addPost","posts","content__posts","compose","profile","dispatch","textNewMessage","addMessageUserActionCreator","MyPosts","_ref","profileUser","Object","keys","length","Spiner","dontHave","job","lookingForAJob","styleProfileShow","profile_show","profile_show__body","profile_show__items","profile_show__picture","profile_show__image","photos","large","defaultPictureUser","user_data","user_name","fullName","user_find_job","lookingForAJobDescription","user_contacts","contactsList","key","contacts","push","social","href","styleProfilePicture","panaram","_useState","useState","status","_useState2","_slicedToArray","inputContent","setInputContent","_useState3","_useState4","editMode","setEditMode","activateEditMode","e","closeEditMode","updateProfileStatus","target","value","caseActive","startsWith","onBlur","onDoubleClick","onInput","autoFocus","ProfilePicture","ProfileStatusWithHooks","userId","getProfileStatus","profileStatus","userStatus","ProfileShow","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","this","getMyProfile","getUserProfile","_Fragment","Profile","React"],"sourceRoot":""}